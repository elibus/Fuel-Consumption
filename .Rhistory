install.packages("shiny")
shiny::runApp()
data(mtcars)
mtcars$factorAm <- as.factor(mtcars$am)
levels(mtcars$factorAm) <- c("Auto", "Manual")
fit <- lm(mpg ~ am + wt + hp, data = mtcars)
fit
summary(fit)
newdata <- data.frame(x = 3)
predict(fit, newdata, interval = ("prediction"))
head(mtcars)
newdata <- data.frame(am = "Auto")
predict(fit, newdata, interval = ("prediction"))
newdata <- data.frame(am = "Auto", wt = 3, hp = 100)
predict(fit, newdata, interval = ("prediction"))
newdata <- data.frame(am = 0, wt = 3, hp = 100)
predict(fit, newdata, interval = ("prediction"))
?predict
new <- data.frame(am = 0, wt = 3, hp = 100)
# predict(fit, newdata, interval = ("prediction"))
pred.fit.plim <- predict(fit, new, interval = "prediction")
pred.fit.clim <- predict(fit, new, interval = "confidence")
pred.fit.plim
pred.fit.clim
matplot(new$x, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
matplot(new$am, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
matplot(new$am, cbind(pred.fit.clim, pred.fit.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
matplot(new$wt, cbind(pred.fit.clim, pred.fit.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
matplot(new$hp, cbind(pred.fit.clim, pred.fit.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
matplot(new$hp, cbind(pred.fit.clim, pred.fit.plim[,-1]), type = "l", ylab = "predicted y")
matplot(new$hp, cbind(pred.fit.clim, pred.fit.plim[,-1]),
lty = c(1,2,3), type = "l", ylab = "predicted y")
matplot(new$hp, cbind(pred.fit.clim, pred.fit.plim[,-1]),
lty = c(1,2), type = "l", ylab = "predicted y")
?matplot
g.pred <- ggplot(pred.fit.plim, aes(x = x, y = fit)) +
theme_bw() +
ggtitle("Prediction interval") +
geom_point(data = xy, aes(x = x, y = y)) +
g.pred
require(ggplot2)
g.pred
g.pred8)
g.pred()
library(gplot)
library(ggplot)
library(ggplot2)
g.pred <- ggplot(pred.fit.plim, aes(x = x, y = fit)) +
theme_bw() +
ggtitle("Prediction interval") +
geom_point(data = xy, aes(x = x, y = y)) +
g.pred
data(mtcars)
mtcars$factorAm <- as.factor(mtcars$am)
levels(mtcars$factorAm) <- c("Auto", "Manual")
fit <- lm(mpg ~ am + wt + hp, data = mtcars)
new <- data.frame(am = 0, wt = 3, hp = 100)
# predict(fit, newdata, interval = ("prediction"))
pred.fit.plim <- predict(fit, new, interval = "prediction", level = 0.95)
# pred.fit.clim <- predict(fit, new, interval = "confidence")
pred.fit.int <- cbind(predx, pred.fit.plim)
pred.fit.plim <- predict(fit, new, interval = "prediction", level = 0.95)
# pred.fit.clim <- predict(fit, new, interval = "confidence")
g.pred <- ggplot(pred.fit.plim, aes(x = x, y = fit)) +
theme_bw() +
ggtitle("Prediction interval") +
geom_point(data = xy, aes(x = x, y = y)) +
g.pred
ggplot(mtcars, aes(x=QUET, y=SBP))+
geom_point()+
geom_smooth(method=lm, se=TRUE)
ggplot(mtcars, aes(x=new, y=mpg))+
geom_point()+
geom_smooth(method=lm, se=TRUE)
ggplot(mtcars, aes(x=c(am = 0, wt = 3, hp = 100), y=mpg))+
geom_point()+
geom_smooth(method=lm, se=TRUE)
mpi <- cbind(mtcars, predict(fit, new, interval = "prediction", level = 0.95))
library(ggplot2)
ggplot(mpi, aes(x = qsec)) +
geom_ribbon(aes(ymin = lwr, ymax = upr),
fill = "blue", alpha = 0.2) +
geom_point(aes(y = wt)) +
geom_line(aes(y = fit), colour = "blue", size = 1)
ggplot(mpi, aes(x = qsec)) +
geom_ribbon(aes(ymin = lwr, ymax = upr),
fill = "blue", alpha = 0.2) +
geom_point(aes(y = mpg)) +
geom_line(aes(y = fit), colour = "blue", size = 1)
ggplot(mpi, aes(x = am)) +
geom_ribbon(aes(ymin = lwr, ymax = upr),
fill = "blue", alpha = 0.2) +
geom_point(aes(y = mpg)) +
geom_line(aes(y = fit), colour = "blue", size = 1)
ggplot(mpi, aes(x = c(am, wt, hp) )) +
geom_ribbon(aes(ymin = lwr, ymax = upr),
fill = "blue", alpha = 0.2) +
geom_point(aes(y = mpg)) +
geom_line(aes(y = fit), colour = "blue", size = 1)
ggplot(mpi, aes(x = c(am + wt + hp) )) +
geom_ribbon(aes(ymin = lwr, ymax = upr),
fill = "blue", alpha = 0.2) +
geom_point(aes(y = mpg)) +
geom_line(aes(y = fit), colour = "blue", size = 1)
ggplot(mpi, aes(x = hp )) +
geom_ribbon(aes(ymin = lwr, ymax = upr),
fill = "blue", alpha = 0.2) +
geom_point(aes(y = mpg)) +
geom_line(aes(y = fit), colour = "blue", size = 1)
cbind(mtcars, predict(fit, new, interval = "prediction", level = 0.95))
?low
?lower
?min
mtcars.1
mtcars.am
mtcars[am]
mtcars["am"]
mtcars["am"].max
max(mtcars["am"])
max(mtcars["hp"])
min(mtcars["hp"])
min(mtcars["wt"])
max(mtcars["wt"])
runApp()
?sliderInput
runApp()
runApp()
